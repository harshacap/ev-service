package ev.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.data.redis.core.RedisTemplate;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import ev.service.EvService;
import ev.util.GSUtil;

@RestController
public class EvServiceController {

	@Autowired
	EvService evService;
	
	public static final String OBJECT_KEY = "RESERVATION.PAYLOAD";
	
	@Autowired
	@Qualifier("redisTemplate")
	private RedisTemplate<String, String> redisTemplate;

	@RequestMapping(value = "/providexid", method = RequestMethod.POST)
	public ResponseEntity<String> provideXid(@RequestBody String swid) {

		String xid = "";
		ResponseEntity<String> resp = null;

		try {
			xid = evService.getXidBySwid(swid);
			if (!xid.equals("")) {
				xid = GSUtil.generateXID();
			}
			resp = new ResponseEntity<String>(xid,HttpStatus.OK);
		} catch (Exception e) {
			resp = new ResponseEntity<String>("",HttpStatus.INTERNAL_SERVER_ERROR);
			e.printStackTrace();
		}
		
		return resp;
	}
	
	@RequestMapping(value = "/storeentitlement", method = RequestMethod.POST)
	public void storeEntitlement(@RequestParam("xid") String xid,@RequestParam("entIdType") String entIdType,@RequestParam("entIdValue") String entIdValue){
		try{
			evService.storeEntitlement(xid,entIdType,entIdValue);
			this.redisTemplate.opsForHash().delete(OBJECT_KEY, entIdValue);
		}catch (Exception e) {
			e.printStackTrace();
		}
	}
}
